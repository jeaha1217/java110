<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
  version="4.0"
  metadata-complete="false">
<!-- web-03 -->
    <description>
       Spring WebMVC Test 
    </description>
    <display-name>Spring WebMVC Test</display-name>

    <!-- 필터 배치= -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/app/*</url-pattern>
    </filter-mapping>
    
    
    <!-- 프론트 컨트롤러 서블릿 배치하기 -->
    <servlet>
        <servlet-name>app</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        
        
        <!-- 
                스프링 설정을 XML대신에 JavaConfig로 하려면
                Java Config를 처리할  IoC 컨테이너 클래스를 지정해야한다.
                프론트 컨트롤러가 사용할 IoC container class 지정하기.-->
        
        <init-param>
        <param-name>contextClass</param-name>
            <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
        </init-param>
        
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>ex01.AppConfig</param-value>
        </init-param>
         
         <!-- 프론트 컨트롤러 DispatcherServlet은 내부에서 IoC Container를 사용한다.
              그 IoC Container는 XML 기반 설정을 사용한다.
              XML Spring 설정 파일 명이 다음의 경로에 규칙으로 되어 있다면
              <init-param> tag를 선언할 필요가 없다.
              
                /WEB-INF/서블릿 별명-servlet.xml
          -->
          
         <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/app-servlet.xml</param-value>
         <!--    init-param 생략해도 정상 작동한다 fuck;; -->
        </init-param>
         
        <load-on-startup>1</load-on-startup>
        
        <multipart-config>
            <max-file-size>2000000</max-file-size>
        </multipart-config>
        
    </servlet>
    
    <servlet-mapping>
        <servlet-name>app</servlet-name>
        <url-pattern>/app/*</url-pattern>
    </servlet-mapping>
    
    
    <!-- 클라이언트가 요청한 URL에 대해 기본 파일을 찾을 때 우선 순위 -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!-- 설정 만지는 방법 세가지. 설정파일이 어디있는지 헤메는데 쩔게됨. -->
</web-app>